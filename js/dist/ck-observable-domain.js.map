{"version":3,"sources":["webpack://ckObservableDomain/webpack/universalModuleDefinition","webpack://ckObservableDomain/webpack/bootstrap","webpack://ckObservableDomain/./node_modules/@signature/json-graph-serializer/src/index.js","webpack://ckObservableDomain/./src/index.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","serialize","options","prefix","substitor","assign","rR","rI","rT","marker","Symbol","cleanup","markObj","JSON","stringify","k","v","Error","ref","[object Object]","Number","push","Array","Map","map","e","Set","sv","String","markTyp","forEach","deserialize","activator","extRef","rev","type","length","undefined","splice","idx","add","parse","processA","a","len","has","set","__webpack_exports__","json_graph_serializer_1","ObservableDomain","initialState","_this","props","P","tranNum","N","graph","g","liftGraphContainerContent","O","roots","R","applyEvent","event","events","E","newOne","getValue","clear","delete"],"mappings":"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","file":"ck-observable-domain.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ckObservableDomain\"] = factory();\n\telse\n\t\troot[\"ckObservableDomain\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\r\n * Serializes an object in JSON that can contain internal relationships.\r\n * Serialized objects contain a \"<prefix>i\" field that is the index\r\n * in the breadth-first traversal of the graph done by JSON.stringify().\r\n * References to already serialized objects are exposed as single-property\r\n * objects like { \"<prefix>r\": idx }.\r\n * The deserialize function uses the index to restore the complete graph.\r\n * Parameter prefix is optional. It defaults to \"~$£€\".\r\n * @param {object} o - The object to serialize\r\n * @param {object} options - Serialization options: prefix (default '~$£€'), substitor\r\n * @return {string} The serialized value.\r\n */\r\nexport function serialize(o, options) {\r\n    const { prefix, substitor } = Object.assign({ prefix: \"~$£€\" }, options);\r\n    const rR = prefix + \">\";\r\n    const rI = prefix + \"°\";\r\n    const rT = prefix + \"þ\";\r\n    const marker = Symbol();\r\n    let cleanup = [];\r\n    try {\r\n        let c = 0;\r\n        function markObj(o) { o[marker] = 1; return o; }\r\n        function markNum(n) { return markObj(new Number(n)); }\r\n        function markTyp(s) {\r\n            if (typeof s !== \"string\") throw new Error(\"Type must be a String.\");\r\n            return markObj(new String(s));\r\n        }\r\n        return JSON.stringify(o, function (k, v) {\r\n            if (k === rR || k === rI || k === rT) {\r\n                if (v !== null && v[marker]) return v;\r\n                throw new Error(\"Conflicting serialization prefix: property '\" + k + \"' exists.\");\r\n            }\r\n            if (v === null || typeof v !== \"object\" || v[marker]) return v;\r\n            let ref = v[rI];\r\n            if (ref) {\r\n                if (ref[marker]) return { [rR]: ref };\r\n                throw new Error(\"Conflicting serialization prefix: property '\" + rI + \"' exists.\");\r\n            }\r\n            v[rI] = ref = markNum(c++);\r\n            cleanup.push(v);\r\n            if (v instanceof Array) {\r\n                v = markObj([markObj({ [rT]: markObj([ref, \"A\"]) }), ...v]);\r\n            }\r\n            else if (v instanceof Map) {\r\n                v = markObj([markObj({ [rT]: markObj([ref, \"M\"]) }), ...[...v].map(e => markObj(e))]);\r\n            }\r\n            else if (v instanceof Set) {\r\n                v = markObj([markObj({ [rT]: markObj([ref, \"S\"]) }), ...v]);\r\n            }\r\n            else if (substitor) {\r\n                let sv = substitor(v, rT);\r\n                if (sv && sv !== v) {\r\n                    v = sv;\r\n                    v[rI] = ref;\r\n                    v[rT] = markTyp(v[rT] || \"\");\r\n                }\r\n            }\r\n            return v;\r\n        });\r\n    }\r\n    finally {\r\n        cleanup.forEach(o => delete o[rI]);\r\n    }\r\n};\r\n\r\n/**\r\n * Deserializes a previously-serialized object graph.\r\n * Parameter prefix is optional and defaults to \"~$£€\": it must, of course,\r\n * be the same as the prefix used to serialize the graph.\r\n * @param {(string|object)} o - The serialized string, or parsed object.\r\n * @param {object} options - Serialization options: prefix (default '~$£€'), activator\r\n * @return {object} The deserialized value.\r\n */\r\nexport function deserialize(s /*:string|object*/, options) {\r\n    const { prefix, activator } = Object.assign({ prefix: \"~$£€\" }, options);\r\n    const rR = prefix + \">\";\r\n    const rI = prefix + \"°\";\r\n    const rT = prefix + \"þ\";\r\n    let extRef = null;\r\n    const map = [];\r\n\r\n    function rev(k, v) {\r\n        let type = null;\r\n        if (v instanceof Array) {\r\n            if (v.length > 0\r\n                && v[0] != null\r\n                && (type = v[0][rT]) !== undefined) {\r\n                v.splice(0, 1);\r\n                switch (type[1]) {\r\n                    case \"A\": break;\r\n                    case \"M\": v = Object.assign(new Map(), { \"v\": v }); break;\r\n                    case \"S\": v = Object.assign(new Set(), { \"v\": v }); break;\r\n                    default: throw new Error(\"Expecting typed array to be 'A', 'M' or 'S'.\");\r\n                }\r\n                map[type[0]] = v;\r\n            }\r\n        }\r\n        else if (v !== null) {\r\n            const idx = v[rI];\r\n            if (idx !== undefined) {\r\n                delete v[rI];\r\n                if ((type = v[rT]) !== undefined) {\r\n                    delete v[rT];\r\n                    if (activator) {\r\n                        v = activator(v, type);\r\n                        if (v) {\r\n                            if (extRef === null) extRef = new Set();\r\n                            extRef.add(v);\r\n                        }\r\n                    }\r\n                }\r\n                map[idx] = v;\r\n            }\r\n        }\r\n        return v;\r\n    }\r\n\r\n    // This simple depth-first traversal applies the reviver to an already \r\n    // JSON parsed tree.\r\n    function d(o) {\r\n        if (o) {\r\n            if (o instanceof Array) {\r\n                for (let i = 0; i < o.length; ++i) {\r\n                    const v = o[i];\r\n                    d(v);\r\n                    o[i] = rev(i, v);\r\n                }\r\n            }\r\n            else if (typeof (o) === \"object\") {\r\n                for (const p in o) {\r\n                    const v = o[p];\r\n                    d(v);\r\n                    o[p] = rev(p, v);\r\n                }\r\n            }\r\n        }\r\n        return o;\r\n    }\r\n    // If its a string, JSON.parse and the reviver handle the first step: registering the \r\n    // objects in map array and any external references into extRef set.   \r\n    const o = typeof (s) === \"string\"\r\n        ? JSON.parse(s, rev)\r\n        : rev(undefined, d(s));\r\n\r\n    // Second step is to handles the collections (array, map and set).\r\n    function processA(map, a) {\r\n        const len = a.length;\r\n        for (let i = 0; i < len; ++i) {\r\n            const c = a[i];\r\n            if (c) {\r\n                const ref = c[rR];\r\n                if (ref !== undefined) a[i] = map[ref];\r\n            }\r\n        }\r\n    }\r\n    for (let i of map) {\r\n        if (extRef === null || !extRef.has(i)) {\r\n            if (i instanceof Array) {\r\n                processA(map, i);\r\n            }\r\n            else if (i instanceof Map) {\r\n                i.v.forEach(e => processA(map, e));\r\n                i.v.forEach(e => i.set(e[0], e[1]));\r\n                delete i.v;\r\n            }\r\n            else if (i instanceof Set) {\r\n                processA(map, i.v);\r\n                i.v.forEach(e => i.add(e));\r\n                delete i.v;\r\n            }\r\n            else {\r\n                for (const p in i) {\r\n                    const o = i[p];\r\n                    if (o !== null) {\r\n                        const ref = o[rR];\r\n                        if (ref !== undefined) i[p] = map[ref];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return o;\r\n}","/* tslint:disable */\r\nimport { deserialize } from \"@signature/json-graph-serializer\";\r\n\r\nexport interface ObservableDomainEvent {\r\n    N: number;\r\n    E: [string, string, number | string][]; // EventCode, TargetRef, Param\r\n}\r\n\r\nexport interface ObservableDomainState {\r\n    N: number;\r\n    P: string[];\r\n    O: any;\r\n    R: string[];\r\n}\r\n\r\nfunction liftGraphContainerContent(g: any[]) {\r\n    const len = g.length;\r\n    for (let i = 0; i < len; ++i) {\r\n        const o = g[i];\r\n        if (o && typeof (o) === \"object\") {\r\n            for (let p in o) {\r\n                const v = o[p];\r\n                if (v && typeof (v) === \"object\") {\r\n                    const c = v[\"$C\"];\r\n                    if (c !== undefined) {\r\n                        o[p] = g[v[\"$i\"]];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return g;\r\n}\r\n\r\nexport class ObservableDomain {\r\n    private o: ObservableDomainState;\r\n    private props: string[];\r\n    private tranNum: number;\r\n    public graph: any;\r\n    public roots: any[];\r\n\r\n    constructor(initialState: string | ObservableDomainState) {\r\n        this.o = typeof (initialState) === \"string\"\r\n            ? deserialize(initialState, { prefix: \"\" })\r\n            : initialState;\r\n        this.props = this.o.P;\r\n        this.tranNum = this.o.N\r\n        this.graph = liftGraphContainerContent(this.o.O);\r\n\r\n        this.roots = this.o.R.map(i => this.graph[i]);\r\n    }\r\n\r\n    public applyEvent(event: ObservableDomainEvent) {\r\n        if (this.tranNum + 1 > event.N) {\r\n            throw new Error(`Invalid transaction number. Expected: greater than ${this.tranNum + 1}, got ${event.N}.`);\r\n        }\r\n\r\n        const events = event.E;\r\n        for (let i = 0; i < events.length; ++i) {\r\n            const e = events[i];\r\n            const code: string = e[0];\r\n            switch (code) {\r\n                case \"N\":  // NewObject\r\n                    {\r\n                        let newOne;\r\n                        switch (e[2]) {\r\n                            case \"\": newOne = {}; break;\r\n                            case \"A\": newOne = []; break;\r\n                            case \"M\": newOne = new Map(); break;\r\n                            case \"S\": newOne = new Set(); break;\r\n                            default: throw new Error(`Unexpected Object type; ${e[2]}. Must be A, M, S or empty string.`);\r\n                        }\r\n                        this.graph[e[1]] = newOne;\r\n                        break;\r\n                    }\r\n                case \"D\":  // DisposedObject\r\n                    {\r\n                        this.graph[e[1]] = null;\r\n                        break;\r\n                    }\r\n                case \"P\":  // NewProperty\r\n                    {\r\n                        if (e[2] != this.props.length) {\r\n                            throw new Error(`Invalid property creation event for '${e[1]}': index must be ${this.props.length}, got ${e[2]}.`);\r\n                        }\r\n                        this.props.push(e[1]);\r\n                        break;\r\n                    }\r\n                case \"C\":  // PropertyChanged\r\n                    {\r\n                        this.graph[e[1]][this.props[<any>e[2]]] = this.getValue(e[3]);\r\n                        break;\r\n                    }\r\n                case \"I\":  // ListInsert\r\n                    {\r\n                        const a = this.graph[e[1]];\r\n                        const idx = e[2];\r\n                        const v = this.getValue(e[3]);\r\n                        if (idx === a.length) a[idx] = v;\r\n                        else a.splice(idx, 0, v);\r\n                        break;\r\n                    }\r\n                case \"CL\": // CollectionClear\r\n                    {\r\n                        const c = this.graph[e[1]];\r\n                        if (c instanceof Array) c.length = 0;\r\n                        else c.clear();\r\n                        break;\r\n                    }\r\n                case \"R\":  // ListRemoveAt\r\n                    {\r\n                        this.graph[e[1]].splice(e[2], 1);\r\n                        break;\r\n                    }\r\n                case \"S\":  // ListSetAt\r\n                    {\r\n                        this.graph[e[1]].splice(e[2], 1, this.getValue(e[3]));\r\n                        break;\r\n                    }\r\n                case \"K\":   // CollectionRemoveKey\r\n                    {\r\n                        this.graph[e[1]].delete(this.getValue(e[2]));\r\n                        break;\r\n                    }\r\n                default: throw new Error(`Unexpected Event code: '${e[0]}'.`);\r\n            }\r\n        }\r\n        this.tranNum = event.N;\r\n    }\r\n\r\n    private getValue(o: any) {\r\n        if (o != null) {\r\n            var ref = o[\">\"];\r\n            if (ref !== undefined) return this.graph[ref];\r\n        }\r\n        return o;\r\n    }\r\n}"],"sourceRoot":""}